---
import prisma from '../utils/prisma';
import FlexTable from "../components/FlexTable.astro";
import type { FinalObjectType } from "../utils/types";
import { getLongestHalfSize } from "../utils/texttools";
import { formatDate } from "../utils/datatools";

type Props = {
  countryParam: string;
};

const { countryParam } = Astro.props;

const decisions = await prisma.decisions.findMany({
  include: {
    caseTypeObj: true,
    decisionMarkerObj: true,
    institutionObj: true,
    updateObj: true,
  },
  where: {
    countryObj: {
      code: countryParam.toUpperCase(),
    },
  },
  orderBy: [
    {
      updateObj: {
        timestamp: "asc",
      },
    },
    {
      institution: "asc",
    },
    {
      caseType: "asc",
    },
    {
      decisionMarker: "asc",
    },
  ],
});
prisma.$disconnect();
let initialState = {
  data: {},
  metadata: {
    dataName: "decisions",
    fields: {
      date: {
        title: "Дата",
        valueTitle: "Сумма по дате",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "updateObj.timestamp",
        formatter: formatDate,
      },
      institution: {
        title: "Институция",
        valueTitle: "Сумма по институции",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "institutionObj.name",
      },
      caseType: {
        title: "Тип дела",
        valueTitle: "Сумма по типу",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "caseTypeObj.type",
      },
      decision: {
        title: "Решение",
        valueTitle: "Количество",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "decisionMarkerObj.description",
      },
    },
    filters: {
      date: { type: "search" },
      institution: { type: "drop" },
      caseType: { type: "drop" },
      decision: { type : "drop" },
    },
    fieldOrder: ["date", "institution", "caseType", "decision"],
  },
} as FinalObjectType;
Object.keys(initialState.metadata.fields).forEach((f) => {
  const titleEmSize = getLongestHalfSize(initialState.metadata.fields[f].title);
  const valueTitleEmSize = getLongestHalfSize(
    initialState.metadata.fields[f].valueTitle
  );
  if (initialState.metadata.fields[f].maxWidth < titleEmSize) {
    initialState.metadata.fields[f].maxWidth = titleEmSize;
  }
  if (initialState.metadata.fields[f].valueMaxWidth < valueTitleEmSize) {
    initialState.metadata.fields[f].valueMaxWidth = valueTitleEmSize;
  }
});
---

<>
  <strong
    >Количество заявлений поданных на определённю дату. Данное количество
    считается от начала года и сбрасывается 1 января
  </strong>
  <FlexTable  rawData={decisions} initialState={initialState} />
</>
