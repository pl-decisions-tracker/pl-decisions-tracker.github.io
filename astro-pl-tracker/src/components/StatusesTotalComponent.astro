---
import prisma from '../utils/prisma';
import { formatDate } from "../utils/datatools";
import { getLongestHalfSize } from "../utils/texttools";
import FlexTable from "../components/FlexTable.astro";
import type { FinalObjectType } from "../utils/types";

type Props = {
  countryParam: string;
};

const { countryParam } = Astro.props;

const statusesTotal = await prisma.statuses.findMany({
  include: {
    statusObj: true,
    updateObj: true,
  },
  where: {
    countryObj: {
      code: countryParam.toUpperCase(),
    },
  },
  orderBy: [
    {
      updateObj: {
        timestamp: "asc",
      },
    },
    {
      status: "asc",
    },
  ],
});
prisma.$disconnect();
let initialState = {
  data: {},
  metadata: {
    dataName: "statuses",
    fields: {
      date: {
        title: "Дата",
        valueTitle: "Сумма по дате",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "updateObj.timestamp",
        formatter: formatDate,
      },
      status: {
        title: "Статус",
        valueTitle: "Количество",
        maxWidth: 0,
        valueMaxWidth: 0,
        values: [],
        resolver: "statusObj.status",
      },
    },
    filters: {
      date: { type: "search" },
      status: { type: "drop" },
    },
    fieldOrder: ["date", "status"],
  },
} as FinalObjectType;
Object.keys(initialState.metadata.fields).forEach((f) => {
  const titleEmSize = getLongestHalfSize(initialState.metadata.fields[f].title);
  const valueTitleEmSize = getLongestHalfSize(
    initialState.metadata.fields[f].valueTitle
  );
  if (initialState.metadata.fields[f].maxWidth < titleEmSize) {
    initialState.metadata.fields[f].maxWidth = titleEmSize;
  }
  if (initialState.metadata.fields[f].valueMaxWidth < valueTitleEmSize) {
    initialState.metadata.fields[f].valueMaxWidth = valueTitleEmSize;
  }
});
---

<>
  <strong
    >Количество заявлений поданных на определённю дату. Данное количество
    считается от начала года и сбрасывается 1 января
  </strong>
  <FlexTable rawData={statusesTotal} initialState={initialState} />
</>
